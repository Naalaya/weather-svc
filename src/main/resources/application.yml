spring:
  application:
    name: weather-svc
  datasource:
    url: jdbc:mysql://localhost:3306/weather_svc
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  flyway:
    enabled: true
    locations: classpath:db/migration
    baselineOnMigrate: true
    validateOnMigrate: true
  jpa:
    generate-ddl: false
    show-sql: true
    properties.hibernate.format_sql: true
    hibernate:
      ddl-auto: update

  kafka:
    bootstrap-servers: localhost:29092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      linger.ms: 5
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
    consumer:
      group-id: forecast
      key-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
server:
  port: 8090

openWeather-map:
  api:
    url: http://localhost:8080/api/v1/forecast/getByCityName?cityName={city}